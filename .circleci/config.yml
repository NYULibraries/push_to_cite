docker-defaults: &docker-defaults
  docker:
    - image: quay.io/nyulibraries/circleci_docker:18.06.1-dc-1.23.2-0
      environment:
        - IMAGE_NAME=pushtocite
        - COMPOSE_PROJECT_NAME=pushtocite
  working_directory: ~/app

build_docker: &build_docker
  run:
    name: Build Docker
    command: |
      export BRANCH_NO_SLASH=${CIRCLE_BRANCH//\//_}
      docker-compose build
      docker-compose -f docker-compose.build.yml build

test: &test
  run:
    name: Test
    command: |
      docker-compose run dev rspec

auth_quay: &auth_quay
  run:
    name: Authenticate Quay 
    command: |
      docker login -u "$QUAY_USERNAME" --password "$QUAY_PASSWORD" quay.io

pull_docker: &pull_docker
  run:
    name: Pull Docker
    command: |
      export BRANCH_NO_SLASH=${CIRCLE_BRANCH//\//_}
      docker pull quay.io/nyulibraries/${IMAGE_NAME}:${BRANCH_NO_SLASH} || docker pull quay.io/nyulibraries/${IMAGE_NAME}:latest

push_docker: &push_docker
  run:
    name: Push Docker
    command: |
      export BRANCH_NO_SLASH=${CIRCLE_BRANCH//\//_}
      docker push quay.io/nyulibraries/${IMAGE_NAME}:latest
      docker push quay.io/nyulibraries/${IMAGE_NAME}:${BRANCH_NO_SLASH}
      docker push quay.io/nyulibraries/${IMAGE_NAME}:${BRANCH_NO_SLASH}-${CIRCLE_SHA1}

version: 2
jobs:
  test-and-build-image:
    <<: *docker-defaults
    steps:
      - checkout
      - setup_remote_docker
      - <<: *auth_quay
      - <<: *pull_docker
      - <<: *build_docker
      - <<: *test
      - run:
          name: Get Junit tests from stopped container
          when: always
          command: docker cp pushtocite_dev_run_1:/app/test-results .
      - store_test_results:
          path: ~/app/test-results
      - store_artifacts:
          path: ~/app/test-results
      - <<: *push_docker

  deploy-dev:
    docker:
      - image: appropriate/curl
    steps:
      - run:
          name: Deploy into staging via Jenkins
          command: |
            export BRANCH_NO_SLASH=${CIRCLE_BRANCH//\//_}
            curl -u $JENKINS_STAGE_USERNAME:$JENKINS_STAGE_API_KEY -X POST https://jenkinsapi-dev.library.nyu.edu/job/PushToCite%20Development%20Deploy/build/api --data-urlencode json="{\"parameter\": [{\"name\":\"TAG\", \"value\":\"${BRANCH_NO_SLASH}-${CIRCLE_SHA1}\"}]}"

  deploy-prod:
    docker:
      - image: appropriate/curl
    steps:
      - run:
          name: Deploy into staging via Jenkins
          command: |
            export BRANCH_NO_SLASH=${CIRCLE_BRANCH//\//_}
            curl -u $JENKINS_PROD_USERNAME:$JENKINS_PROD_API_KEY -X POST https://jenkinsapi.library.nyu.edu/job/PushToCite%20Production%20Deploy/build/api --data-urlencode json="{\"parameter\": [{\"name\":\"TAG\", \"value\":\"${BRANCH_NO_SLASH}-${CIRCLE_SHA1}\"}]}"

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - test-and-build-image
      - deploy-dev:
          requires:
            - test-and-build-image
          filters:
            branches:
              ignore:
                - master
      - deploy-prod:
          requires:
            - test-and-build-image
          filters:
            branches:
              only:
                - master
